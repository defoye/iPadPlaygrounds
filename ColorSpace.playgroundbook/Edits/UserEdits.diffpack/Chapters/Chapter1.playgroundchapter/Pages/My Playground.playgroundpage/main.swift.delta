<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>Diff</key>
	<array>
		<dict>
			<key>ModifiedContent</key>
			<string>

import UIKit

public let mainViewSquareDimension: Double = 40.0

public class MainView: UIView {
    
    var smallViewsDict: [String : UIView]
    
    public override init(frame: CGRect) {
        smallViewsDict = [:]
        super.init(frame: frame)
        
        self.backgroundColor = .white
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}
extension MainView {
    public func renderSmallSquares() {
        var dimension: CGFloat = 20.0
        
        let endStride = mainViewSquareDimension
        for i in stride(from: 0, to: endStride, by: 10) {
            for j in stride(from: 0, to: endStride, by: 10) {
                let hash = String("\(i)|\(j)")
                //let point = CGPoint(x: i, y: j)
                let x = CGFloat(Double.random(in: 0.0 ..&lt; mainViewSquareDimension))
                let y = CGFloat(Double.random(in: 0.0 ..&lt; mainViewSquareDimension))
                dimension = CGFloat.random(in: 0.0 ..&lt; 2.0) * dimension
                var size = CGSize(width: dimension, height: dimension)
                let point = CGPoint(x: x, y: y)
                let smallView = SmallView(frame: CGRect(origin: point, size: size))
                //smallView.translatesAutoresizingMaskIntoConstraints = false
                smallView.backgroundColor = generateRandomColor()
                self.addSubview(smallView)
                print("view added at point \(point) with size \(size)")
                smallViewsDict[hash] = smallView
            }
        }
    }
    
    func generateRandomColor() -&gt; UIColor {
        let hue : CGFloat = CGFloat(arc4random() % 256) / 256 // use 256 to get full range from 0.0 to 1.0
        let saturation : CGFloat = CGFloat(arc4random() % 128) / 256 + 0.5 // from 0.5 to 1.0 to stay away from white
        let brightness : CGFloat = CGFloat(arc4random() % 128) / 256 + 0.5 // from 0.5 to 1.0 to stay away from black
        
        return UIColor(hue: hue, saturation: saturation, brightness: brightness, alpha: 1)
    }
}

public class SmallView: UIView {
    public override init(frame: CGRect) {
        super.init(frame: frame)
    }

    required init?(coder aDecoder: NSCoder) {
        fatalError("init(coder:) has not been implemented")
    }
}












let mainView = MainView(frame: CGRect(x: 0, y: 0, width: mainViewSquareDimension, height: mainViewSquareDimension))
mainView.renderSmallSquares()


</string>
			<key>ModifiedRange</key>
			<string>{1, 2466}</string>
			<key>OriginalContent</key>
			<string></string>
			<key>OriginalRange</key>
			<string>{1, 0}</string>
		</dict>
	</array>
	<key>File</key>
	<string>Chapters/Chapter1.playgroundchapter/Pages/My Playground.playgroundpage/main.swift</string>
</dict>
</plist>
